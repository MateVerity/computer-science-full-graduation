/*
 * VAR DECLARATIONS
 */
word     vw_a : 10;
bool     vb_a : true;
word vaw_a[2] : 1 2;
bool vab_a[2] : true false;
word    $pw_a : 10; 
bool    $pb_a : true;

/*
 * FUNCTIONS
 */

/*
 * MAIN
 */
word main()
{
	/*
     * ASSIGNMENTS
     */
        vw_a = (1 - 2 + 3 * 4 / 5 + (3 - 2 * 4));
        vb_a = true;
        vb_a = 1 < 2;
        vb_a = 1 < vw_a;
        vb_a = true || (false && 4 < 1);
        //vb_a = true < true;// err1: args should be word
        //vb_a = true + true;// err1: args should be word; err2: var is bool, result is word (from '+' operation)
        vw_a = -1;
        vw_a = -vw_a;
        //vw_a = -true;// err: word expected in unary
        //vw_a = -vb_a;// err: word expected in unary
        vw_a = vaw_a[0 + 2 * 4 / (3  / 4)];
        //vb_a = vaw_a[true];// err1: array index must be word or byte; err2 type mismatch in assignment

        // pointers in expressions
        vw_a = *pw_a;
        //vw_a = *pb_a;// err dereference is a bool, var is word
        vb_a = *pb_a || true;
        //vb_a = *pb_a || 1;    //indica erro corretamente
        vw_a = *pw_a + 1;
        pw_a = pw_a + 1;
        //vw_a = pw_a + 1; //indica erro corretamente
        //pw_a = pw_a - 1;// err1: pointers can only in '+' operations; err2: type mismatch in assignment
        pw_a = 1 + pw_a + 1;
        //pw_a = 1 + pw_a / 1;
        //vw_a = *not_declared;// err: pointer not declared
        //vw_a = *vw_a;// err: vw_a is not a pointer to be dereferenced
        //vw_a = pw_a + 1;// err: sums needs word, got a word_pointer
        
        // Pointer reference
        pw_a = &vaw_a[10];
        pw_a = &vw_a;
        //pw_a = &pw_a;
        //pw_a = &vb_a;
        pw_a = &vaw_a[10 + 10];
		//pw_a = &vaw_a[1 < 2];//err: index type
		//pw_a = &vab_a[5 * (2 / 1)];//err: wrong type of pointer returned
        //pw_a = &vaw_a;        
        //pw_a = &vaw_a[10 + true];
        //pw_a = &vab_a[10 + 10];       

        vb_a = true || (false && 4 < 1);
        vw_a = vaw_a[0 + 2 * 4 / (3  / 4)];
        //vw_a = true + true; //indica erro corretamente
        vaw_a[10] = true;


        /*
		 * DECLARATIONS
		 */
        //not_declared = 1;// err identifier not declared

        return vw_a;
}