   0  $accept : begin $end

   1  begin : program

   2  program : decl program
   3          | decl
   4          | func program
   5          | func

   6  decl : simple_decl
   7       | array_decl
   8       | pointer_decl

   9  simple_decl : types identifier ':' literals ';'

  10  identifier : TK_IDENTIFIER

  11  types : KW_WORD
  12        | KW_BOOL
  13        | KW_BYTE

  14  literals : LIT_INTEGER
  15           | LIT_FALSE
  16           | LIT_TRUE
  17           | LIT_CHAR
  18           | LIT_STRING

  19  array_decl : types identifier '[' LIT_INTEGER ']' ';'
  20             | types identifier '[' LIT_INTEGER ']' ':' lit_list ';'

  21  lit_list : literals lit_list
  22           | literals

  23  pointer_decl : types '$' identifier ':' literals ';'

  24  func : types identifier '(' param_list ')' decl_func_list command_block
  25       | types identifier '(' ')' decl_func_list command_block
  26       | types identifier '(' param_list ')' command_block
  27       | types identifier '(' ')' command_block

  28  param_list : types identifier ',' param_list
  29             | types identifier

  30  decl_func_list : simple_decl decl_func_list
  31                 | pointer_decl decl_func_list
  32                 | simple_decl
  33                 | pointer_decl

  34  command_block : '{' command_list '}'

  35  command_list : command ';' command_list
  36               |

  37  command : identifier '=' exp
  38          | identifier '[' exp ']' '=' exp
  39          | KW_IF '(' exp ')' KW_THEN command
  40          | KW_IF '(' exp ')' KW_THEN command KW_ELSE command
  41          | KW_LOOP '(' exp ')' command
  42          | KW_INPUT identifier
  43          | KW_OUTPUT output_list
  44          | KW_RETURN exp
  45          | command_block

  46  output_list : exp_arit ',' output_list
  47              | exp_arit

  48  func_call : identifier '(' func_call_list ')'
  49            | identifier '(' ')'

  50  func_call_list : exp ',' func_call_list
  51                 | exp

  52  exp : exp_arit
  53      | exp_logic
  54      | func_call
  55      | '-' exp
  56      | '*' exp
  57      | '&' identifier
  58      | '&' identifier '[' exp ']'
  59      | '(' exp ')'

  60  exp_arit : exp '+' exp
  61           | exp '-' exp
  62           | exp '/' exp
  63           | exp '*' exp
  64           | literals
  65           | identifier
  66           | identifier '[' exp ']'

  67  exp_logic : exp OPERATOR_LE exp
  68            | exp OPERATOR_GE exp
  69            | exp OPERATOR_EQ exp
  70            | exp OPERATOR_NE exp
  71            | exp OPERATOR_OR exp
  72            | exp OPERATOR_AND exp
  73            | exp '>' exp
  74            | exp '<' exp

state 0
	$accept : . begin $end  (0)

	KW_WORD  shift 1
	KW_BOOL  shift 2
	KW_BYTE  shift 3
	.  error

	begin  goto 4
	types  goto 5
	program  goto 6
	decl  goto 7
	simple_decl  goto 8
	array_decl  goto 9
	pointer_decl  goto 10
	func  goto 11


state 1
	types : KW_WORD .  (11)

	.  reduce 11


state 2
	types : KW_BOOL .  (12)

	.  reduce 12


state 3
	types : KW_BYTE .  (13)

	.  reduce 13


state 4
	$accept : begin . $end  (0)

	$end  accept


state 5
	simple_decl : types . identifier ':' literals ';'  (9)
	array_decl : types . identifier '[' LIT_INTEGER ']' ';'  (19)
	array_decl : types . identifier '[' LIT_INTEGER ']' ':' lit_list ';'  (20)
	pointer_decl : types . '$' identifier ':' literals ';'  (23)
	func : types . identifier '(' param_list ')' decl_func_list command_block  (24)
	func : types . identifier '(' ')' decl_func_list command_block  (25)
	func : types . identifier '(' param_list ')' command_block  (26)
	func : types . identifier '(' ')' command_block  (27)

	TK_IDENTIFIER  shift 12
	'$'  shift 13
	.  error

	identifier  goto 14


state 6
	begin : program .  (1)

	.  reduce 1


state 7
	program : decl . program  (2)
	program : decl .  (3)

	KW_WORD  shift 1
	KW_BOOL  shift 2
	KW_BYTE  shift 3
	$end  reduce 3

	types  goto 5
	program  goto 15
	decl  goto 7
	simple_decl  goto 8
	array_decl  goto 9
	pointer_decl  goto 10
	func  goto 11


state 8
	decl : simple_decl .  (6)

	.  reduce 6


state 9
	decl : array_decl .  (7)

	.  reduce 7


state 10
	decl : pointer_decl .  (8)

	.  reduce 8


state 11
	program : func . program  (4)
	program : func .  (5)

	KW_WORD  shift 1
	KW_BOOL  shift 2
	KW_BYTE  shift 3
	$end  reduce 5

	types  goto 5
	program  goto 16
	decl  goto 7
	simple_decl  goto 8
	array_decl  goto 9
	pointer_decl  goto 10
	func  goto 11


state 12
	identifier : TK_IDENTIFIER .  (10)

	.  reduce 10


state 13
	pointer_decl : types '$' . identifier ':' literals ';'  (23)

	TK_IDENTIFIER  shift 12
	.  error

	identifier  goto 17


state 14
	simple_decl : types identifier . ':' literals ';'  (9)
	array_decl : types identifier . '[' LIT_INTEGER ']' ';'  (19)
	array_decl : types identifier . '[' LIT_INTEGER ']' ':' lit_list ';'  (20)
	func : types identifier . '(' param_list ')' decl_func_list command_block  (24)
	func : types identifier . '(' ')' decl_func_list command_block  (25)
	func : types identifier . '(' param_list ')' command_block  (26)
	func : types identifier . '(' ')' command_block  (27)

	':'  shift 18
	'['  shift 19
	'('  shift 20
	.  error


state 15
	program : decl program .  (2)

	.  reduce 2


state 16
	program : func program .  (4)

	.  reduce 4


state 17
	pointer_decl : types '$' identifier . ':' literals ';'  (23)

	':'  shift 21
	.  error


state 18
	simple_decl : types identifier ':' . literals ';'  (9)

	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	.  error

	literals  goto 27


state 19
	array_decl : types identifier '[' . LIT_INTEGER ']' ';'  (19)
	array_decl : types identifier '[' . LIT_INTEGER ']' ':' lit_list ';'  (20)

	LIT_INTEGER  shift 28
	.  error


state 20
	func : types identifier '(' . param_list ')' decl_func_list command_block  (24)
	func : types identifier '(' . ')' decl_func_list command_block  (25)
	func : types identifier '(' . param_list ')' command_block  (26)
	func : types identifier '(' . ')' command_block  (27)

	KW_WORD  shift 1
	KW_BOOL  shift 2
	KW_BYTE  shift 3
	')'  shift 29
	.  error

	types  goto 30
	param_list  goto 31


state 21
	pointer_decl : types '$' identifier ':' . literals ';'  (23)

	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	.  error

	literals  goto 32


state 22
	literals : LIT_INTEGER .  (14)

	.  reduce 14


state 23
	literals : LIT_FALSE .  (15)

	.  reduce 15


state 24
	literals : LIT_TRUE .  (16)

	.  reduce 16


state 25
	literals : LIT_CHAR .  (17)

	.  reduce 17


state 26
	literals : LIT_STRING .  (18)

	.  reduce 18


state 27
	simple_decl : types identifier ':' literals . ';'  (9)

	';'  shift 33
	.  error


state 28
	array_decl : types identifier '[' LIT_INTEGER . ']' ';'  (19)
	array_decl : types identifier '[' LIT_INTEGER . ']' ':' lit_list ';'  (20)

	']'  shift 34
	.  error


state 29
	func : types identifier '(' ')' . decl_func_list command_block  (25)
	func : types identifier '(' ')' . command_block  (27)

	KW_WORD  shift 1
	KW_BOOL  shift 2
	KW_BYTE  shift 3
	'{'  shift 35
	.  error

	types  goto 36
	simple_decl  goto 37
	pointer_decl  goto 38
	decl_func_list  goto 39
	command_block  goto 40


state 30
	param_list : types . identifier ',' param_list  (28)
	param_list : types . identifier  (29)

	TK_IDENTIFIER  shift 12
	.  error

	identifier  goto 41


state 31
	func : types identifier '(' param_list . ')' decl_func_list command_block  (24)
	func : types identifier '(' param_list . ')' command_block  (26)

	')'  shift 42
	.  error


state 32
	pointer_decl : types '$' identifier ':' literals . ';'  (23)

	';'  shift 43
	.  error


state 33
	simple_decl : types identifier ':' literals ';' .  (9)

	.  reduce 9


state 34
	array_decl : types identifier '[' LIT_INTEGER ']' . ';'  (19)
	array_decl : types identifier '[' LIT_INTEGER ']' . ':' lit_list ';'  (20)

	':'  shift 44
	';'  shift 45
	.  error


state 35
	command_block : '{' . command_list '}'  (34)
	command_list : .  (36)

	KW_IF  shift 46
	KW_LOOP  shift 47
	KW_INPUT  shift 48
	KW_RETURN  shift 49
	KW_OUTPUT  shift 50
	TK_IDENTIFIER  shift 12
	'{'  shift 35
	'}'  reduce 36

	command  goto 51
	command_list  goto 52
	command_block  goto 53
	identifier  goto 54


state 36
	simple_decl : types . identifier ':' literals ';'  (9)
	pointer_decl : types . '$' identifier ':' literals ';'  (23)

	TK_IDENTIFIER  shift 12
	'$'  shift 13
	.  error

	identifier  goto 55


state 37
	decl_func_list : simple_decl . decl_func_list  (30)
	decl_func_list : simple_decl .  (32)

	KW_WORD  shift 1
	KW_BOOL  shift 2
	KW_BYTE  shift 3
	'{'  reduce 32

	types  goto 36
	simple_decl  goto 37
	pointer_decl  goto 38
	decl_func_list  goto 56


state 38
	decl_func_list : pointer_decl . decl_func_list  (31)
	decl_func_list : pointer_decl .  (33)

	KW_WORD  shift 1
	KW_BOOL  shift 2
	KW_BYTE  shift 3
	'{'  reduce 33

	types  goto 36
	simple_decl  goto 37
	pointer_decl  goto 38
	decl_func_list  goto 57


state 39
	func : types identifier '(' ')' decl_func_list . command_block  (25)

	'{'  shift 35
	.  error

	command_block  goto 58


state 40
	func : types identifier '(' ')' command_block .  (27)

	.  reduce 27


state 41
	param_list : types identifier . ',' param_list  (28)
	param_list : types identifier .  (29)

	','  shift 59
	')'  reduce 29


state 42
	func : types identifier '(' param_list ')' . decl_func_list command_block  (24)
	func : types identifier '(' param_list ')' . command_block  (26)

	KW_WORD  shift 1
	KW_BOOL  shift 2
	KW_BYTE  shift 3
	'{'  shift 35
	.  error

	types  goto 36
	simple_decl  goto 37
	pointer_decl  goto 38
	decl_func_list  goto 60
	command_block  goto 61


state 43
	pointer_decl : types '$' identifier ':' literals ';' .  (23)

	.  reduce 23


state 44
	array_decl : types identifier '[' LIT_INTEGER ']' ':' . lit_list ';'  (20)

	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	.  error

	lit_list  goto 62
	literals  goto 63


state 45
	array_decl : types identifier '[' LIT_INTEGER ']' ';' .  (19)

	.  reduce 19


state 46
	command : KW_IF . '(' exp ')' KW_THEN command  (39)
	command : KW_IF . '(' exp ')' KW_THEN command KW_ELSE command  (40)

	'('  shift 64
	.  error


state 47
	command : KW_LOOP . '(' exp ')' command  (41)

	'('  shift 65
	.  error


state 48
	command : KW_INPUT . identifier  (42)

	TK_IDENTIFIER  shift 12
	.  error

	identifier  goto 66


state 49
	command : KW_RETURN . exp  (44)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 71
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 50
	command : KW_OUTPUT . output_list  (43)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 77
	exp_arit  goto 78
	exp_logic  goto 73
	func_call  goto 74
	output_list  goto 79
	literals  goto 75
	identifier  goto 76


state 51
	command_list : command . ';' command_list  (35)

	';'  shift 80
	.  error


state 52
	command_block : '{' command_list . '}'  (34)

	'}'  shift 81
	.  error


state 53
	command : command_block .  (45)

	.  reduce 45


state 54
	command : identifier . '=' exp  (37)
	command : identifier . '[' exp ']' '=' exp  (38)

	'['  shift 82
	'='  shift 83
	.  error


state 55
	simple_decl : types identifier . ':' literals ';'  (9)

	':'  shift 18
	.  error


state 56
	decl_func_list : simple_decl decl_func_list .  (30)

	.  reduce 30


state 57
	decl_func_list : pointer_decl decl_func_list .  (31)

	.  reduce 31


state 58
	func : types identifier '(' ')' decl_func_list command_block .  (25)

	.  reduce 25


state 59
	param_list : types identifier ',' . param_list  (28)

	KW_WORD  shift 1
	KW_BOOL  shift 2
	KW_BYTE  shift 3
	.  error

	types  goto 30
	param_list  goto 84


state 60
	func : types identifier '(' param_list ')' decl_func_list . command_block  (24)

	'{'  shift 35
	.  error

	command_block  goto 85


state 61
	func : types identifier '(' param_list ')' command_block .  (26)

	.  reduce 26


state 62
	array_decl : types identifier '[' LIT_INTEGER ']' ':' lit_list . ';'  (20)

	';'  shift 86
	.  error


state 63
	lit_list : literals . lit_list  (21)
	lit_list : literals .  (22)

	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	';'  reduce 22

	lit_list  goto 87
	literals  goto 63


state 64
	command : KW_IF '(' . exp ')' KW_THEN command  (39)
	command : KW_IF '(' . exp ')' KW_THEN command KW_ELSE command  (40)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 88
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 65
	command : KW_LOOP '(' . exp ')' command  (41)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 89
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 66
	command : KW_INPUT identifier .  (42)

	.  reduce 42


state 67
	exp : '-' . exp  (55)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 90
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 68
	exp : '*' . exp  (56)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 91
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 69
	exp : '&' . identifier  (57)
	exp : '&' . identifier '[' exp ']'  (58)

	TK_IDENTIFIER  shift 12
	.  error

	identifier  goto 92


state 70
	exp : '(' . exp ')'  (59)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 93
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 71
	command : KW_RETURN exp .  (44)
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_AND  shift 94
	OPERATOR_OR  shift 95
	'+'  shift 96
	'-'  shift 97
	'/'  shift 98
	'*'  shift 99
	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	KW_ELSE  reduce 44
	';'  reduce 44


state 72
	exp : exp_arit .  (52)

	.  reduce 52


state 73
	exp : exp_logic .  (53)

	.  reduce 53


state 74
	exp : func_call .  (54)

	.  reduce 54


state 75
	exp_arit : literals .  (64)

	.  reduce 64


state 76
	func_call : identifier . '(' func_call_list ')'  (48)
	func_call : identifier . '(' ')'  (49)
	exp_arit : identifier .  (65)
	exp_arit : identifier . '[' exp ']'  (66)

	'['  shift 106
	'('  shift 107
	KW_ELSE  reduce 65
	OPERATOR_AND  reduce 65
	OPERATOR_OR  reduce 65
	'+'  reduce 65
	'-'  reduce 65
	'/'  reduce 65
	'*'  reduce 65
	OPERATOR_LE  reduce 65
	OPERATOR_GE  reduce 65
	OPERATOR_EQ  reduce 65
	OPERATOR_NE  reduce 65
	'>'  reduce 65
	'<'  reduce 65
	';'  reduce 65
	']'  reduce 65
	')'  reduce 65
	','  reduce 65


state 77
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_AND  shift 94
	OPERATOR_OR  shift 95
	'+'  shift 96
	'-'  shift 97
	'/'  shift 98
	'*'  shift 99
	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	.  error


state 78
	output_list : exp_arit . ',' output_list  (46)
	output_list : exp_arit .  (47)
	exp : exp_arit .  (52)

	','  shift 108
	KW_ELSE  reduce 47
	OPERATOR_AND  reduce 52
	OPERATOR_OR  reduce 52
	'+'  reduce 52
	'-'  reduce 52
	'/'  reduce 52
	'*'  reduce 52
	OPERATOR_LE  reduce 52
	OPERATOR_GE  reduce 52
	OPERATOR_EQ  reduce 52
	OPERATOR_NE  reduce 52
	'>'  reduce 52
	'<'  reduce 52
	';'  reduce 47


state 79
	command : KW_OUTPUT output_list .  (43)

	.  reduce 43


state 80
	command_list : command ';' . command_list  (35)
	command_list : .  (36)

	KW_IF  shift 46
	KW_LOOP  shift 47
	KW_INPUT  shift 48
	KW_RETURN  shift 49
	KW_OUTPUT  shift 50
	TK_IDENTIFIER  shift 12
	'{'  shift 35
	'}'  reduce 36

	command  goto 51
	command_list  goto 109
	command_block  goto 53
	identifier  goto 54


state 81
	command_block : '{' command_list '}' .  (34)

	.  reduce 34


state 82
	command : identifier '[' . exp ']' '=' exp  (38)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 110
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 83
	command : identifier '=' . exp  (37)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 111
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 84
	param_list : types identifier ',' param_list .  (28)

	.  reduce 28


state 85
	func : types identifier '(' param_list ')' decl_func_list command_block .  (24)

	.  reduce 24


state 86
	array_decl : types identifier '[' LIT_INTEGER ']' ':' lit_list ';' .  (20)

	.  reduce 20


state 87
	lit_list : literals lit_list .  (21)

	.  reduce 21


state 88
	command : KW_IF '(' exp . ')' KW_THEN command  (39)
	command : KW_IF '(' exp . ')' KW_THEN command KW_ELSE command  (40)
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_AND  shift 94
	OPERATOR_OR  shift 95
	'+'  shift 96
	'-'  shift 97
	'/'  shift 98
	'*'  shift 99
	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	')'  shift 112
	.  error


state 89
	command : KW_LOOP '(' exp . ')' command  (41)
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_AND  shift 94
	OPERATOR_OR  shift 95
	'+'  shift 96
	'-'  shift 97
	'/'  shift 98
	'*'  shift 99
	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	')'  shift 113
	.  error


state 90
	exp : '-' exp .  (55)
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	KW_ELSE  reduce 55
	OPERATOR_AND  reduce 55
	OPERATOR_OR  reduce 55
	'+'  reduce 55
	'-'  reduce 55
	'/'  reduce 55
	'*'  reduce 55
	';'  reduce 55
	']'  reduce 55
	')'  reduce 55
	','  reduce 55


state 91
	exp : '*' exp .  (56)
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	KW_ELSE  reduce 56
	OPERATOR_AND  reduce 56
	OPERATOR_OR  reduce 56
	'+'  reduce 56
	'-'  reduce 56
	'/'  reduce 56
	'*'  reduce 56
	';'  reduce 56
	']'  reduce 56
	')'  reduce 56
	','  reduce 56


state 92
	exp : '&' identifier .  (57)
	exp : '&' identifier . '[' exp ']'  (58)

	'['  shift 114
	KW_ELSE  reduce 57
	OPERATOR_AND  reduce 57
	OPERATOR_OR  reduce 57
	'+'  reduce 57
	'-'  reduce 57
	'/'  reduce 57
	'*'  reduce 57
	OPERATOR_LE  reduce 57
	OPERATOR_GE  reduce 57
	OPERATOR_EQ  reduce 57
	OPERATOR_NE  reduce 57
	'>'  reduce 57
	'<'  reduce 57
	';'  reduce 57
	']'  reduce 57
	')'  reduce 57
	','  reduce 57


state 93
	exp : '(' exp . ')'  (59)
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_AND  shift 94
	OPERATOR_OR  shift 95
	'+'  shift 96
	'-'  shift 97
	'/'  shift 98
	'*'  shift 99
	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	')'  shift 115
	.  error


state 94
	exp_logic : exp OPERATOR_AND . exp  (72)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 116
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 95
	exp_logic : exp OPERATOR_OR . exp  (71)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 117
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 96
	exp_arit : exp '+' . exp  (60)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 118
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 97
	exp_arit : exp '-' . exp  (61)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 119
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 98
	exp_arit : exp '/' . exp  (62)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 120
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 99
	exp_arit : exp '*' . exp  (63)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 121
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 100
	exp_logic : exp OPERATOR_LE . exp  (67)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 122
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 101
	exp_logic : exp OPERATOR_GE . exp  (68)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 123
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 102
	exp_logic : exp OPERATOR_EQ . exp  (69)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 124
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 103
	exp_logic : exp OPERATOR_NE . exp  (70)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 125
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 104
	exp_logic : exp '>' . exp  (73)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 126
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 105
	exp_logic : exp '<' . exp  (74)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 127
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 106
	exp_arit : identifier '[' . exp ']'  (66)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 128
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 107
	func_call : identifier '(' . func_call_list ')'  (48)
	func_call : identifier '(' . ')'  (49)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	')'  shift 129
	.  error

	exp  goto 130
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	func_call_list  goto 131
	literals  goto 75
	identifier  goto 76


state 108
	output_list : exp_arit ',' . output_list  (46)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 77
	exp_arit  goto 78
	exp_logic  goto 73
	func_call  goto 74
	output_list  goto 132
	literals  goto 75
	identifier  goto 76


state 109
	command_list : command ';' command_list .  (35)

	.  reduce 35


state 110
	command : identifier '[' exp . ']' '=' exp  (38)
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_AND  shift 94
	OPERATOR_OR  shift 95
	'+'  shift 96
	'-'  shift 97
	'/'  shift 98
	'*'  shift 99
	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	']'  shift 133
	.  error


state 111
	command : identifier '=' exp .  (37)
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_AND  shift 94
	OPERATOR_OR  shift 95
	'+'  shift 96
	'-'  shift 97
	'/'  shift 98
	'*'  shift 99
	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	KW_ELSE  reduce 37
	';'  reduce 37


state 112
	command : KW_IF '(' exp ')' . KW_THEN command  (39)
	command : KW_IF '(' exp ')' . KW_THEN command KW_ELSE command  (40)

	KW_THEN  shift 134
	.  error


state 113
	command : KW_LOOP '(' exp ')' . command  (41)

	KW_IF  shift 46
	KW_LOOP  shift 47
	KW_INPUT  shift 48
	KW_RETURN  shift 49
	KW_OUTPUT  shift 50
	TK_IDENTIFIER  shift 12
	'{'  shift 35
	.  error

	command  goto 135
	command_block  goto 53
	identifier  goto 54


state 114
	exp : '&' identifier '[' . exp ']'  (58)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 136
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 115
	exp : '(' exp ')' .  (59)

	.  reduce 59


state 116
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp OPERATOR_AND exp .  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_OR  shift 95
	'+'  shift 96
	'-'  shift 97
	'/'  shift 98
	'*'  shift 99
	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	KW_ELSE  reduce 72
	OPERATOR_AND  reduce 72
	';'  reduce 72
	']'  reduce 72
	')'  reduce 72
	','  reduce 72


state 117
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp OPERATOR_OR exp .  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	'+'  shift 96
	'-'  shift 97
	'/'  shift 98
	'*'  shift 99
	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	KW_ELSE  reduce 71
	OPERATOR_AND  reduce 71
	OPERATOR_OR  reduce 71
	';'  reduce 71
	']'  reduce 71
	')'  reduce 71
	','  reduce 71


state 118
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp '+' exp .  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	'/'  shift 98
	'*'  shift 99
	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	KW_ELSE  reduce 60
	OPERATOR_AND  reduce 60
	OPERATOR_OR  reduce 60
	'+'  reduce 60
	'-'  reduce 60
	';'  reduce 60
	']'  reduce 60
	')'  reduce 60
	','  reduce 60


state 119
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp '-' exp .  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	'/'  shift 98
	'*'  shift 99
	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	KW_ELSE  reduce 61
	OPERATOR_AND  reduce 61
	OPERATOR_OR  reduce 61
	'+'  reduce 61
	'-'  reduce 61
	';'  reduce 61
	']'  reduce 61
	')'  reduce 61
	','  reduce 61


state 120
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp '/' exp .  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	KW_ELSE  reduce 62
	OPERATOR_AND  reduce 62
	OPERATOR_OR  reduce 62
	'+'  reduce 62
	'-'  reduce 62
	'/'  reduce 62
	'*'  reduce 62
	';'  reduce 62
	']'  reduce 62
	')'  reduce 62
	','  reduce 62


state 121
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_arit : exp '*' exp .  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	KW_ELSE  reduce 63
	OPERATOR_AND  reduce 63
	OPERATOR_OR  reduce 63
	'+'  reduce 63
	'-'  reduce 63
	'/'  reduce 63
	'*'  reduce 63
	';'  reduce 63
	']'  reduce 63
	')'  reduce 63
	','  reduce 63


state 122
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp OPERATOR_LE exp .  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	KW_ELSE  reduce 67
	OPERATOR_AND  reduce 67
	OPERATOR_OR  reduce 67
	'+'  reduce 67
	'-'  reduce 67
	'/'  reduce 67
	'*'  reduce 67
	';'  reduce 67
	']'  reduce 67
	')'  reduce 67
	','  reduce 67


state 123
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp OPERATOR_GE exp .  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	KW_ELSE  reduce 68
	OPERATOR_AND  reduce 68
	OPERATOR_OR  reduce 68
	'+'  reduce 68
	'-'  reduce 68
	'/'  reduce 68
	'*'  reduce 68
	OPERATOR_LE  reduce 68
	';'  reduce 68
	']'  reduce 68
	')'  reduce 68
	','  reduce 68


state 124
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp OPERATOR_EQ exp .  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	KW_ELSE  reduce 69
	OPERATOR_AND  reduce 69
	OPERATOR_OR  reduce 69
	'+'  reduce 69
	'-'  reduce 69
	'/'  reduce 69
	'*'  reduce 69
	OPERATOR_LE  reduce 69
	OPERATOR_GE  reduce 69
	';'  reduce 69
	']'  reduce 69
	')'  reduce 69
	','  reduce 69


state 125
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp OPERATOR_NE exp .  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	'>'  shift 104
	'<'  shift 105
	KW_ELSE  reduce 70
	OPERATOR_AND  reduce 70
	OPERATOR_OR  reduce 70
	'+'  reduce 70
	'-'  reduce 70
	'/'  reduce 70
	'*'  reduce 70
	OPERATOR_LE  reduce 70
	OPERATOR_GE  reduce 70
	OPERATOR_EQ  reduce 70
	';'  reduce 70
	']'  reduce 70
	')'  reduce 70
	','  reduce 70


state 126
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp '>' exp .  (73)
	exp_logic : exp . '<' exp  (74)

	'<'  shift 105
	KW_ELSE  reduce 73
	OPERATOR_AND  reduce 73
	OPERATOR_OR  reduce 73
	'+'  reduce 73
	'-'  reduce 73
	'/'  reduce 73
	'*'  reduce 73
	OPERATOR_LE  reduce 73
	OPERATOR_GE  reduce 73
	OPERATOR_EQ  reduce 73
	OPERATOR_NE  reduce 73
	';'  reduce 73
	']'  reduce 73
	')'  reduce 73
	','  reduce 73


state 127
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)
	exp_logic : exp '<' exp .  (74)

	.  reduce 74


state 128
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_arit : identifier '[' exp . ']'  (66)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_AND  shift 94
	OPERATOR_OR  shift 95
	'+'  shift 96
	'-'  shift 97
	'/'  shift 98
	'*'  shift 99
	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	']'  shift 137
	.  error


state 129
	func_call : identifier '(' ')' .  (49)

	.  reduce 49


state 130
	func_call_list : exp . ',' func_call_list  (50)
	func_call_list : exp .  (51)
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_AND  shift 94
	OPERATOR_OR  shift 95
	'+'  shift 96
	'-'  shift 97
	'/'  shift 98
	'*'  shift 99
	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	','  shift 138
	')'  reduce 51


state 131
	func_call : identifier '(' func_call_list . ')'  (48)

	')'  shift 139
	.  error


state 132
	output_list : exp_arit ',' output_list .  (46)

	.  reduce 46


state 133
	command : identifier '[' exp ']' . '=' exp  (38)

	'='  shift 140
	.  error


state 134
	command : KW_IF '(' exp ')' KW_THEN . command  (39)
	command : KW_IF '(' exp ')' KW_THEN . command KW_ELSE command  (40)

	KW_IF  shift 46
	KW_LOOP  shift 47
	KW_INPUT  shift 48
	KW_RETURN  shift 49
	KW_OUTPUT  shift 50
	TK_IDENTIFIER  shift 12
	'{'  shift 35
	.  error

	command  goto 141
	command_block  goto 53
	identifier  goto 54


state 135
	command : KW_LOOP '(' exp ')' command .  (41)

	.  reduce 41


state 136
	exp : '&' identifier '[' exp . ']'  (58)
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_AND  shift 94
	OPERATOR_OR  shift 95
	'+'  shift 96
	'-'  shift 97
	'/'  shift 98
	'*'  shift 99
	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	']'  shift 142
	.  error


state 137
	exp_arit : identifier '[' exp ']' .  (66)

	.  reduce 66


state 138
	func_call_list : exp ',' . func_call_list  (50)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 130
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	func_call_list  goto 143
	literals  goto 75
	identifier  goto 76


state 139
	func_call : identifier '(' func_call_list ')' .  (48)

	.  reduce 48


state 140
	command : identifier '[' exp ']' '=' . exp  (38)

	TK_IDENTIFIER  shift 12
	LIT_INTEGER  shift 22
	LIT_FALSE  shift 23
	LIT_TRUE  shift 24
	LIT_CHAR  shift 25
	LIT_STRING  shift 26
	'-'  shift 67
	'*'  shift 68
	'&'  shift 69
	'('  shift 70
	.  error

	exp  goto 144
	exp_arit  goto 72
	exp_logic  goto 73
	func_call  goto 74
	literals  goto 75
	identifier  goto 76


state 141
	command : KW_IF '(' exp ')' KW_THEN command .  (39)
	command : KW_IF '(' exp ')' KW_THEN command . KW_ELSE command  (40)

	KW_ELSE  shift 145
	';'  reduce 39


state 142
	exp : '&' identifier '[' exp ']' .  (58)

	.  reduce 58


state 143
	func_call_list : exp ',' func_call_list .  (50)

	.  reduce 50


state 144
	command : identifier '[' exp ']' '=' exp .  (38)
	exp_arit : exp . '+' exp  (60)
	exp_arit : exp . '-' exp  (61)
	exp_arit : exp . '/' exp  (62)
	exp_arit : exp . '*' exp  (63)
	exp_logic : exp . OPERATOR_LE exp  (67)
	exp_logic : exp . OPERATOR_GE exp  (68)
	exp_logic : exp . OPERATOR_EQ exp  (69)
	exp_logic : exp . OPERATOR_NE exp  (70)
	exp_logic : exp . OPERATOR_OR exp  (71)
	exp_logic : exp . OPERATOR_AND exp  (72)
	exp_logic : exp . '>' exp  (73)
	exp_logic : exp . '<' exp  (74)

	OPERATOR_AND  shift 94
	OPERATOR_OR  shift 95
	'+'  shift 96
	'-'  shift 97
	'/'  shift 98
	'*'  shift 99
	OPERATOR_LE  shift 100
	OPERATOR_GE  shift 101
	OPERATOR_EQ  shift 102
	OPERATOR_NE  shift 103
	'>'  shift 104
	'<'  shift 105
	KW_ELSE  reduce 38
	';'  reduce 38


state 145
	command : KW_IF '(' exp ')' KW_THEN command KW_ELSE . command  (40)

	KW_IF  shift 46
	KW_LOOP  shift 47
	KW_INPUT  shift 48
	KW_RETURN  shift 49
	KW_OUTPUT  shift 50
	TK_IDENTIFIER  shift 12
	'{'  shift 35
	.  error

	command  goto 146
	command_block  goto 53
	identifier  goto 54


state 146
	command : KW_IF '(' exp ')' KW_THEN command KW_ELSE command .  (40)

	.  reduce 40


45 terminals, 23 nonterminals
75 grammar rules, 147 states
